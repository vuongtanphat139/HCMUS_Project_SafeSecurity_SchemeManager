CONNECT QLCONGTY/DOAN;
ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE;

-- PROC XEM DANH SÁCH CỦA NHÂN VIÊN
CREATE OR REPLACE PROCEDURE QLCONGTY.SELECT_NHANVIEN
AS
    USERID CHAR(5);
    RESULTS SYS_REFCURSOR;
BEGIN
    USERID := SYS_CONTEXT('USERENV', 'SESSION_USER');
    IF(USERID LIKE 'NS%') THEN OPEN RESULTS FOR SELECT * FROM QLCONGTY.NS_NHANVIEN;
    ELSIF(USERID LIKE 'TC%' OR USERID LIKE 'QLCONGTY%') THEN OPEN RESULTS FOR SELECT * FROM QLCONGTY.NHANVIEN;        
    ELSIF(USERID LIKE 'QL%') THEN OPEN RESULTS FOR SELECT * FROM QLCONGTY.QL_NHANVIEN;        
    ELSIF(USERID LIKE 'TP%') THEN OPEN RESULTS FOR SELECT * FROM QLCONGTY.TP_NHANVIEN;        
    ELSIF(USERID LIKE 'NV%' OR USERID LIKE 'TA%') THEN OPEN RESULTS FOR SELECT * FROM QLCONGTY.V_NHANVIEN;        
    END IF;
    DBMS_SQL.RETURN_RESULT(RESULTS);
END;
/
-- PROC XÓA TOÀN BỘ USER
CREATE OR REPLACE PROCEDURE DROP_ALL_USER
AS
    CURSOR NV_CURSOR IS SELECT MANV FROM QLCONGTY.NHANVIEN;
    MANV NVARCHAR2(50);
BEGIN
    FOR REC IN NV_CURSOR
    LOOP
        MANV := REC.MANV;
        EXECUTE IMMEDIATE 'BEGIN DROP_USER(''' || MANV || '''); END;';
    END LOOP;
END;
/
-- PROC THÊN NHÂN VIÊN 
CREATE OR REPLACE PROCEDURE USP_ADDEMPLOYEE(
    NAMEEMP NVARCHAR2,
    GENDER IN NVARCHAR2,
    BIRTHDAY IN	DATE,
    ADDRESS	IN NVARCHAR2,
    PHONE IN CHAR,
    SALARY IN CHAR,
    ALLOWANCE IN CHAR,
    USERROLE IN NVARCHAR2,
    USERMANAGER IN CHAR,
    PHG IN INT
)
AS
    NEWID CHAR(5);
    COUNT_CHECK INT;
BEGIN
    --SELECT COUNT(*) INTO COUNT_CHECK FROM
    NEWID := QLCONGTY.CREATE_USERID(USERROLE);
    INSERT INTO QLCONGTY.NHANVIEN(MANV, TENNV, PHAI, NGAYSINH, DIACHI, SODT, LUONG, PHUCAP, VAITRO, MANQL, PHG) 
    VALUES (NEWID, NAMEEMP, GENDER, BIRTHDAY, ADDRESS, PHONE, SALARY, ALLOWANCE, USERROLE, USERMANAGER, PHG);
END;
/
--PROC UPDATE NHÂN VIÊN
CREATE OR REPLACE PROCEDURE USP_UPDATEEMPLOYEE(
    IDEMP IN CHAR,
    NAMEEMP IN NVARCHAR2,
    GENDER IN NVARCHAR2,
    BIRTHDAY IN	DATE,
    ADDRESS	IN NVARCHAR2,
    PHONE IN CHAR,
    SALARY IN CHAR,
    ALLOWANCE IN CHAR,
    USERROLE IN NVARCHAR2,
    USERMANAGER IN CHAR,
    PHGBAN IN INT
)
AS
    COUNT_CHECK INT;
BEGIN
    --SELECT COUNT(*) INTO COUNT_CHECK FROM QLCONGTY.NHANVIEN WHERE MANV = IDEMP;
    UPDATE QLCONGTY.NHANVIEN
    SET TENNV = NAMEEMP, PHAI = GENDER, NGAYSINH = BIRTHDAY ,DIACHI = ADDRESS,
    SODT = PHONE, LUONG = SALARY, PHUCAP = ALLOWANCE, VAITRO = USERROLE, MANQL = USERMANAGER, PHG = PHGBAN
    WHERE MANV = IDEMP;
END;
/
--PROC UPDATE NGAYSINH, SODT, DIACHI NHÂN VIÊN
CREATE OR REPLACE PROCEDURE USP_UPDATEYOURSELF(
    IDEMP IN CHAR,
    BIRTHDAY IN	DATE,
    ADDRESS	IN NVARCHAR2,
    PHONE IN CHAR
)
AS
    COUNT_CHECK INT;
BEGIN
    SELECT COUNT(*) INTO COUNT_CHECK FROM QLCONGTY.NHANVIEN WHERE MANV = IDEMP AND MANV = SYS_CONTEXT('USERENV', 'SESSION_USER');
    IF(COUNT_CHECK != 0) THEN
        BEGIN
            UPDATE QLCONGTY.NHANVIEN
            SET NGAYSINH = BIRTHDAY ,DIACHI = ADDRESS, SODT = PHONE
            WHERE MANV = IDEMP;
        END;
    END IF;
END;
/
--PROC THÊM PROJECT
CREATE OR REPLACE PROCEDURE USP_ADDPROJECT(
    NAMEPROJECT NVARCHAR2,
    START_TIME IN DATE,
    PHGBAN IN INT
)
AS
    NEWID CHAR(5);
    COUNT_CHECK INT;
BEGIN
    --SELECT COUNT(*) INTO COUNT_CHECK FROM
    NEWID := QLCONGTY.CREATE_PROJECTID();
    INSERT INTO QLCONGTY.DEAN(MADA, TENDA, NGAYBD, PHONG) 
    VALUES (NEWID, NAMEPROJECT, START_TIME, PHGBAN);
END;
/
--PROC UPDATE PROJECT
CREATE OR REPLACE PROCEDURE USP_UPDATEPROJECT(
    IDPROJECT IN CHAR,
    NAMEPROJECT IN NVARCHAR2,
    START_TIME IN DATE,
    PHGBAN IN INT
)
AS
    COUNT_CHECK INT;
BEGIN
    --SELECT COUNT(*) INTO COUNT_CHECK FROM QLCONGTY.NHANVIEN WHERE MANV = IDEMP;
    UPDATE QLCONGTY.DEAN
    SET TENDA = NAMEPROJECT, NGAYBD = START_TIME , PHONG = PHGBAN
    WHERE MADA = IDPROJECT;
END;
/
--PROC THÊM DEPARTMENT
CREATE OR REPLACE PROCEDURE USP_ADDDEPART(
    NAMEDEPART NVARCHAR2,
    TRGPHG IN CHAR
)
AS
    NEWID CHAR(5);
    COUNT_CHECK INT;
BEGIN
    --SELECT COUNT(*) INTO COUNT_CHECK FROM
    NEWID := QLCONGTY.CREATE_DEPARTMENTID();
    INSERT INTO QLCONGTY.PHONGBAN(MAPB, TENPB, TRPHG) 
    VALUES (NEWID, NAMEDEPART, TRGPHG);
END;
/
--PROC UPDATE PROJECT
CREATE OR REPLACE PROCEDURE USP_UPDATEDEPART(
    IDDEPART IN CHAR,
    NAMEDEPART IN NVARCHAR2,
    TRGPHG IN CHAR
)
AS
    COUNT_CHECK INT;
BEGIN
    --SELECT COUNT(*) INTO COUNT_CHECK FROM QLCONGTY.NHANVIEN WHERE MANV = IDEMP;
    UPDATE QLCONGTY.PHONGBAN
    SET TENPB = NAMEDEPART, TRPHG = TRGPHG
    WHERE MAPB = IDDEPART;
END;
/
--PROC TẠO TOÀN BỘ USER VÀ PHÂN QUYỀN
CREATE OR REPLACE PROCEDURE CREATE_ALL_USER
AS
    CURSOR NV_CURSOR IS SELECT MANV FROM QLCONGTY.NHANVIEN;
    MANV NVARCHAR2(50);
BEGIN
    FOR REC IN NV_CURSOR
    LOOP
        MANV := REC.MANV;
        EXECUTE IMMEDIATE 'BEGIN CREATE_USER(''' || MANV || ''', ''DOAN''); END;';
        EXECUTE IMMEDIATE 'GRANT SELECT ON QLCONGTY.NHANVIEN TO ' || MANV;
        EXECUTE IMMEDIATE 'GRANT UPDATE(NGAYSINH,DIACHI,SODT) ON QLCONGTY.NHANVIEN TO ' || MANV;
        EXECUTE IMMEDIATE 'GRANT SELECT ON QLCONGTY.PHANCONG TO ' || MANV;
        EXECUTE IMMEDIATE 'GRANT SELECT ON QLCONGTY.DEAN TO ' || MANV;
        EXECUTE IMMEDIATE 'GRANT SELECT ON QLCONGTY.PHONGBAN TO ' || MANV;
        EXECUTE IMMEDIATE 'GRANT EXECUTE ON QLCONGTY.CHANGENHANVIEN TO ' || MANV;
        EXECUTE IMMEDIATE 'GRANT EXECUTE ON QLCONGTY.MANAGEPHANCONG TO ' || MANV;
        EXECUTE IMMEDIATE 'GRANT EXECUTE ON QLCONGTY.SELECT_NHANVIEN TO ' || MANV;
        
        IF(MANV LIKE 'NS%') THEN EXECUTE IMMEDIATE 'GRANT SELECT ON QLCONGTY.NS_NHANVIEN TO ' || MANV;
        ELSIF(MANV LIKE 'QL%') THEN EXECUTE IMMEDIATE 'GRANT SELECT ON QLCONGTY.QL_NHANVIEN TO ' || MANV;        
        ELSIF(MANV LIKE 'TP%') THEN EXECUTE IMMEDIATE 'GRANT SELECT ON QLCONGTY.TP_NHANVIEN TO ' || MANV;        
        ELSIF(MANV LIKE 'NV%' OR MANV LIKE 'TDA%') THEN EXECUTE IMMEDIATE 'GRANT SELECT ON QLCONGTY.V_NHANVIEN TO ' || MANV;        
        END IF;
        
        IF(MANV LIKE 'NS%') THEN 
            BEGIN
                EXECUTE IMMEDIATE 'GRANT UPDATE, INSERT ON QLCONGTY.NHANVIEN TO ' || MANV;
                EXECUTE IMMEDIATE 'GRANT UPDATE, INSERT ON QLCONGTY.PHONGBAN TO ' || MANV;
            END;
        ELSIF(MANV LIKE 'TA%') THEN EXECUTE IMMEDIATE 'GRANT INSERT,UPDATE,DELETE ON QLCONGTY.DEAN TO ' || MANV;        
        ELSIF(MANV LIKE 'TP%') THEN EXECUTE IMMEDIATE 'GRANT INSERT,UPDATE,DELETE ON QLCONGTY.PHANCONG TO ' || MANV;        
        ELSIF(MANV LIKE 'TC%') THEN EXECUTE IMMEDIATE 'GRANT UPDATE(LUONG,PHUCAP) ON QLCONGTY.NHANVIEN TO ' || MANV;        
        END IF;
    END LOOP;
END;
/

--Xem toàn bộ bảng có trong hệ thống
CREATE OR REPLACE PROCEDURE LIST_TABLE
AS
    TABLECURSOR SYS_REFCURSOR;
BEGIN  
    OPEN TABLECURSOR FOR
    SELECT TABLE_NAME
    FROM ALL_TABLES
    WHERE OWNER = 'QLCONGTY';
    
    DBMS_SQL.RETURN_RESULT(TABLECURSOR);
END;
/

--Xem toàn bộ view có trong hệ thống
CREATE OR REPLACE PROCEDURE LIST_VIEW
AS
    VIEWCURSOR SYS_REFCURSOR;
BEGIN  
    OPEN VIEWCURSOR FOR
    SELECT VIEW_NAME
    FROM ALL_VIEWS
    WHERE OWNER = 'QLCONGTY';
    
    DBMS_SQL.RETURN_RESULT(VIEWCURSOR);
END;
